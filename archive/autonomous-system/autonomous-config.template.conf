# ==============================================================================
# Autonomous RUTOS System Configuration
# 
# Configuration file for the autonomous deployment and monitoring system.
# Copy this to autonomous-config.conf and customize for your environment.
# ==============================================================================

# === RUTOS DEVICE CONFIGURATION ===
# Space-separated list of RUTOS device IP addresses or hostnames
RUTOS_HOSTS="192.168.80.1 192.168.80.2 192.168.80.3"

# SSH configuration
SSH_KEY="/path/to/your/ssh/private/key"
SSH_USER="root"
SSH_TIMEOUT="30"

# === DEPLOYMENT CONFIGURATION ===
# Which deployment script to use (bootstrap-install-rutos.sh or bootstrap-deploy-v3-rutos.sh)
DEPLOYMENT_SCRIPT="bootstrap-deploy-v3-rutos.sh"

# Deployment schedule (cron format)
DEPLOYMENT_SCHEDULE="0 */6 * * *"  # Every 6 hours

# === GITHUB CONFIGURATION ===
# GitHub repository information
REPO_OWNER="markus-lassfolk"
REPO_NAME="rutos-starlink-failover"
GITHUB_TOKEN="your-github-token-here"

# GitHub issue configuration
ISSUE_LABELS="autonomous,bug,deployment-error"
DEFAULT_ASSIGNEE="github-copilot"

# === ERROR MONITORING CONFIGURATION ===
# Error monitoring mode
CONTINUOUS_MODE="false"  # Set to "true" for continuous monitoring, "false" for cron-based
CHECK_INTERVAL="300"     # Check interval in seconds (5 minutes)

# Error processing
MAX_ERRORS_PER_RUN="10"  # Maximum errors to process in one run
ERROR_RETENTION_DAYS="30"  # How long to keep processed error records

# === LOGGING CONFIGURATION ===
# Log directory and files
LOG_DIR="./logs"
DEBUG="1"  # Set to "1" for debug logging, "0" for normal logging

# Log retention
LOG_RETENTION_DAYS="7"   # How long to keep detailed logs

# === NOTIFICATION CONFIGURATION ===
# Email notifications (optional)
ENABLE_EMAIL_NOTIFICATIONS="false"
EMAIL_RECIPIENT="admin@example.com"
SMTP_SERVER="smtp.example.com"

# Slack notifications (optional)
ENABLE_SLACK_NOTIFICATIONS="false"
SLACK_WEBHOOK_URL="https://hooks.slack.com/services/..."
SLACK_CHANNEL="#rutos-alerts"

# === VERIFICATION CONFIGURATION ===
# Post-deployment verification checks
VERIFY_SCRIPT_EXISTENCE="true"
VERIFY_DAEMON_STATUS="true"
VERIFY_CRON_ENTRIES="true"
VERIFY_LOGS="true"

# Verification timeout
VERIFICATION_TIMEOUT="60"  # Seconds to wait for verification

# === RECOVERY CONFIGURATION ===
# Automatic recovery attempts
ENABLE_AUTO_RECOVERY="true"
MAX_RECOVERY_ATTEMPTS="3"
RECOVERY_DELAY="300"  # Seconds between recovery attempts

# Recovery strategies
RECOVERY_STRATEGIES="redeploy,restart-services,factory-reset"

# === ADVANCED CONFIGURATION ===
# Deployment parallelism
MAX_PARALLEL_DEPLOYMENTS="3"  # Number of simultaneous deployments

# Error categorization
CRITICAL_ERRORS="failed to download|permission denied|disk full|out of memory"
WARNING_ERRORS="connection timeout|retry|warning"

# Issue management
AUTO_CLOSE_FIXED_ISSUES="true"
REOPEN_RECURRING_ISSUES="true"

# === AUTONOMOUS LEARNING ===
# Machine learning for error prediction
ENABLE_ERROR_PREDICTION="false"  # Future feature
PREDICTION_MODEL_PATH="./models/error-prediction.model"

# Success rate tracking
TRACK_SUCCESS_RATES="true"
SUCCESS_RATE_THRESHOLD="95"  # Percentage threshold for alerts

# === SECURITY CONFIGURATION ===
# SSH security
SSH_STRICT_HOST_KEY_CHECKING="no"  # For automation, but less secure
SSH_USER_KNOWN_HOSTS_FILE="/dev/null"

# Token encryption
ENCRYPT_TOKENS="false"  # Future feature for enhanced security
ENCRYPTION_KEY_PATH="./keys/encryption.key"

# === DEVELOPMENT/TESTING CONFIGURATION ===
# Test mode settings
TEST_MODE="false"  # Set to "true" to enable test mode (no actual deployments)
TEST_RUTOS_HOST="192.168.1.100"  # Test host for development

# Dry run mode
DRY_RUN="false"  # Set to "true" to simulate operations without executing

# Verbose logging
VERBOSE="false"  # Set to "true" for maximum verbosity

# === EXAMPLE COMPLETE CONFIGURATION ===
# Uncomment and customize the following for a quick start:

# RUTOS_HOSTS="192.168.80.1"
# SSH_KEY="/home/user/.ssh/rutos_key"
# GITHUB_TOKEN="ghp_your_token_here"
# DEPLOYMENT_SCHEDULE="0 */4 * * *"  # Every 4 hours
# DEBUG="1"
# VERIFY_DAEMON_STATUS="true"
# ENABLE_AUTO_RECOVERY="true"
