name: Security Scan

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  security-events: write
  actions: read
  pull-requests: write

jobs:
  security-scan:
    runs-on: ubuntu-latest
    name: Security Scan
    steps:
    - uses: actions/checkout@v4
    
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'table'
        output: 'trivy-results.txt'
        exit-code: '0'
        
    - name: Run Trivy for SARIF (best effort)
      uses: aquasecurity/trivy-action@master
      continue-on-error: true
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'
        exit-code: '0'
        
    - name: Try to upload SARIF to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v3
      if: always() && github.event_name == 'push' && github.ref == 'refs/heads/main'
      continue-on-error: true
      with:
        sarif_file: 'trivy-results.sarif'
        
    - name: Display scan results
      if: always()
      run: |
        echo "Security scan completed. Results:"
        
        # Display human-readable results
        if [ -f "trivy-results.txt" ]; then
          echo "=== Security Scan Results ==="
          cat trivy-results.txt
          echo "============================="
        fi
        
        # Check if SARIF was generated
        if [ -f "trivy-results.sarif" ]; then
          echo "SARIF file generated successfully"
          # Extract summary from SARIF
          if command -v jq >/dev/null 2>&1; then
            echo "Vulnerability summary:"
            jq -r '.runs[0].results[]? | "\(.level // "info"): \(.message.text)"' trivy-results.sarif | head -10 || echo "No vulnerabilities in SARIF format"
          fi
        else
          echo "No SARIF file generated"
        fi
        
    - name: Comment scan results on PR
      if: github.event_name == 'pull_request' && always()
      uses: actions/github-script@v7
      continue-on-error: true
      with:
        script: |
          const fs = require('fs');
          let comment = '## üîí Security Scan Results\n\n';
          
          try {
            if (fs.existsSync('trivy-results.txt')) {
              const results = fs.readFileSync('trivy-results.txt', 'utf8');
              if (results.trim()) {
                comment += '```\n' + results + '\n```';
              } else {
                comment += '‚úÖ No security vulnerabilities detected!';
              }
            } else {
              comment += '‚ö†Ô∏è Security scan results not available';
            }
          } catch (error) {
            comment += '‚ùå Error reading security scan results: ' + error.message;
          }
          
          // Post comment
          await github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });
        
    - name: Check for hardcoded secrets
      run: |
        echo "Checking for potential hardcoded secrets..."
        if grep -r -n -i "password\|secret\|token\|key" --include="*.sh" --include="*.md" --include="*.json" . | grep -v "YOUR_" | grep -v "PLACEHOLDER" | grep -v "example"; then
          echo "::warning::Found potential hardcoded secrets"
        fi
