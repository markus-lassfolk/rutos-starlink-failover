name: Python Code Quality

on:
  push:
    branches: [ '*' ]
    paths:
      - '**/*.py'
      - '**/requirements.txt'
  pull_request:
    branches: [ '*' ]
    paths:
      - '**/*.py'
      - '**/requirements.txt'

permissions:
  contents: write
  pull-requests: read

jobs:
  python-quality:
    runs-on: ubuntu-latest
    name: Python Code Quality Check
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 black pylint bandit safety
          # Install project dependencies if requirements.txt exists
          find . -name "requirements.txt" -exec pip install -r {} \;
      
      - name: Auto-format Python code with Black
        if: github.event_name == 'push'
        run: |
          if find . -name "*.py" | head -1 > /dev/null; then
            echo "ðŸŽ¨ Auto-formatting Python files with Black..."
            black --line-length 88 .
            echo "âœ… Python files formatted successfully"
          else
            echo "No Python files found to format"
          fi
      
      - name: Commit formatting changes
        if: github.event_name == 'push'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add -A
          if ! git diff --cached --quiet; then
            git commit -m "ðŸŽ¨ Auto-format Python code with Black [skip ci]"
            git push
            echo "âœ… Committed Python formatting changes"
          else
            echo "âœ… No Python formatting changes needed"
          fi
      
      - name: Run Black (code formatter verification)
        run: |
          if find . -name "*.py" | head -1 > /dev/null; then
            black --check --diff .
          else
            echo "No Python files found to check"
          fi
      
      - name: Run Flake8 (linting)
        run: |
          if find . -name "*.py" | head -1 > /dev/null; then
            flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
            flake8 . --count --exit-zero --max-complexity=10 --max-line-length=88 --statistics
          else
            echo "No Python files found to lint"
          fi
      
      - name: Run Pylint (advanced linting)
        run: |
          if find . -name "*.py" | head -1 > /dev/null; then
            find . -name "*.py" -exec pylint --errors-only {} +
          else
            echo "No Python files found for pylint"
          fi
      
      - name: Run Bandit (security check)
        run: |
          if find . -name "*.py" | head -1 > /dev/null; then
            bandit -r . -f json || true
          else
            echo "No Python files found for security check"
          fi
      
      - name: Check for security vulnerabilities in dependencies
        run: |
          if find . -name "requirements.txt" | head -1 > /dev/null; then
            find . -name "requirements.txt" -exec safety check -r {} \;
          else
            echo "No requirements.txt found"
          fi
