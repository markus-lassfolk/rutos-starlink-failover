name: Auto-Convert Copilot PRs from Draft

on:
  # Trigger when PR is synchronized (new commits) or edited (description updated)
  pull_request:
    types: [synchronize, edited]
  
  # Trigger when comments are added (Copilot often comments when done)
  issue_comment:
    types: [created]
  
  # Manual trigger for testing
  workflow_dispatch:

jobs:
  auto-convert-copilot-drafts:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      issues: read
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Convert Copilot draft PRs to ready when work is complete
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -e
          
          echo "üîç Checking if Copilot has finished working on draft PRs..."
          
          # Determine which PR to check based on trigger event
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            pr_number="${{ github.event.number }}"
            echo "üìç Triggered by PR #$pr_number event: ${{ github.event.action }}"
          elif [ "${{ github.event_name }}" = "issue_comment" ]; then
            pr_number="${{ github.event.issue.number }}"
            echo "üìç Triggered by comment on PR #$pr_number"
          else
            echo "üìç Manual trigger - checking all draft PRs"
            pr_number=""
          fi
          
          # Function to check if Copilot appears to be done working
          check_copilot_completion() {
            local pr_num=$1
            local pr_data=$(gh pr view "$pr_num" --json isDraft,assignees,title,body,comments)
            
            # Check if PR is draft and has Copilot assigned
            local is_draft=$(echo "$pr_data" | jq -r '.isDraft')
            local copilot_assigned=$(echo "$pr_data" | jq -r '.assignees[] | select(.login == "Copilot") | .login // empty')
            
            if [ "$is_draft" != "true" ] || [ -z "$copilot_assigned" ]; then
              echo "‚ÑπÔ∏è  PR #$pr_num: Not a Copilot draft PR (skipping)"
              return 1
            fi
            
            local pr_title=$(echo "$pr_data" | jq -r '.title')
            local pr_body=$(echo "$pr_data" | jq -r '.body // ""')
            
            echo "ÔøΩ Analyzing PR #$pr_num: '$pr_title'"
            
            # Look for completion indicators in PR body
            local completion_indicators="Fixes #|Closes #|Summary|Issues Fixed|Testing|Validation Results|Scope Compliance"
            
            if echo "$pr_body" | grep -qE "$completion_indicators"; then
              echo "‚úÖ PR #$pr_num: Found completion indicators in description"
              
              # Additional check: Look for recent comments from Copilot
              local recent_comments=$(echo "$pr_data" | jq -r '.comments[-3:] | .[] | select(.author.login == "Copilot") | .body' 2>/dev/null || echo "")
              
              if echo "$recent_comments" | grep -qE "(completed|finished|ready|done)"; then
                echo "‚úÖ PR #$pr_num: Found completion language in recent comments"
                return 0
              elif [ ${#pr_body} -gt 1000 ]; then
                echo "‚úÖ PR #$pr_num: Substantial PR description (${#pr_body} chars) suggests completion"
                return 0
              else
                echo "‚è≥ PR #$pr_num: Has completion indicators but waiting for more signals"
                return 1
              fi
            else
              echo "‚è≥ PR #$pr_num: No completion indicators found yet"
              return 1
            fi
          }
          
          # Check specific PR or all draft PRs
          if [ -n "$pr_number" ]; then
            if check_copilot_completion "$pr_number"; then
              echo "üîß Converting PR #$pr_number from draft to ready for review..."
              if gh api -X PATCH "/repos/${{ github.repository }}/pulls/$pr_number" --field draft=false; then
                echo "‚úÖ Successfully converted PR #$pr_number to ready for review"
                echo "üéØ This will trigger validation workflows automatically"
              else
                echo "‚ùå Failed to convert PR #$pr_number from draft to ready"
              fi
            fi
          else
            # Manual trigger - check all draft PRs
            draft_prs=$(gh pr list --state open --draft --json number --limit 20)
            echo "$draft_prs" | jq -r '.[].number' | while read pr_num; do
              if [ -n "$pr_num" ] && check_copilot_completion "$pr_num"; then
                echo "üîß Converting PR #$pr_num from draft to ready for review..."
                if gh api -X PATCH "/repos/${{ github.repository }}/pulls/$pr_num" --field draft=false; then
                  echo "‚úÖ Successfully converted PR #$pr_num to ready for review"
                else
                  echo "‚ùå Failed to convert PR #$pr_num from draft to ready"
                fi
              fi
            done
          fi
          
          echo "üéâ Copilot completion check finished"
